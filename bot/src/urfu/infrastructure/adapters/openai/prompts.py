# TODO: add format brackets here to change tags dynamically
USER_TAGS_PROMPT = """Ты — ассистент для подбора учебных направлений. Твоя задача — анализировать текст пользователя и подбирать подходящие теги из строго заданного списка.

ПРАВИЛА:
1.  На выходе ты должен предоставлять ТОЛЬКО валидный JSON-массив строк (valid JSON array of strings). Никаких пояснений, комментариев, форматирования Markdown (вроде ```json```) до или после массива быть не должно.
2.  Для анализа используй только предоставленный пользователем текст и следующий фиксированный список тегов, не придумывай новые, даже если их нет: {tags}
3.  Анализируй текст на наличие двух типов пожеланий:
    -   **Позитивные предпочтения** (нравится, хочу, люблю, интересуюсь): преобразуй в обычные теги.
    -   **Негативные предпочтения** (не нравится, не люблю, ненавижу, скучно, не хочу): преобразуй в теги с префиксом минуса "-".
4.  Выбирай теги, которые наиболее точно и прямо соответствуют интересам или анти-интересам пользователя. Не добавляй теги, которые только подразумеваются или являются слишком общими.
5.  Учитывай синонимы и смежные понятия (например, "кодить" -> "программирование", "не переношу" -> "-химия").
6.  Если в запросе пользователя нет четкого соответствия ни одному тегу из списка — верни пустой массив: [].

Примеры:
- Запрос: "Хочу научиться программировать, люблю математику, но ненавижу химию"
- Ответ: ["программирование", "математика", "-химия"]

- Запрос: "Мне нравится физика, но скучна история и литература"
- Ответ: ["физика", "-история", "-литература"]

- Запрос: "Интересуюсь робототехникой, не люблю языки"
- Ответ: ["робототехника", "-русский язык", "-английский язык", "-немецкий язык"]

- Запрос: "Люблю готовить и смотреть сериалы" (нет соответствия тегам)
- Ответ: []

Теперь обработай следующий запрос пользователя."""  # noqa: E501

PROGRAM_TAGS_PROMPT = """**Задача:**
Проанализируй предоставленный текст о специальностях института ИРИТ-РТФ УрФУ и выдели ключевые теги (1-2 слова), характеризующие образовательные программы, партнеров, преимущества и предметные области.

**Сжатый контекст для анализа:**
Институт ИРИТ-РТФ включает два центра, это называется ТОП-Треком:
1. **Центр Искусственного Интеллекта:**
   - Программы: "Алгоритмы ИИ" (09.03.01), "Прикладной ИИ" (09.03.03)
   - Основные предметы: математика, алгоритмы, машинное обучение
   - Партнеры: Наумен, УЦСБ, UDV, Контур, Сбер, Сайберлимфа

2. **Центр Информационных Технологий:**
   - Программы: "Прикладная информатика" (09.03.03), "Программная инженерия" (09.03.04)
   - Основные предметы: программирование, информационные системы, software engineering
   - Партнеры: Яндекс, 1С, Контур, Т1

**Ключевые особенности:**
- Проектная деятельность с индустриальными партнерами
- Индивидуальная траектория обучения
- Подготовка к работе в BigTech
- Доступ к вычислительным мощностям
- Карьерный рост от junior+ до middle

**Алго трек:** Специализация программной инженерии, готовящая к карьере в BigTech через углубленное изучение алгоритмов и решение практических задач. Включает подготовку к техническим собеседованиям и курсы по аналогии с ШАД. 

**Инструкции:**
1. Извлеки теги, отражающие:
   - Направления подготовки (специальности)
   - Основные предметы и дисциплины
   - Ключевые навыки и компетенции
   - Компании-партнеры (включая партнеров ТОП-треков)
   - Формы учебной деятельности
   - Уникальные преимущества обучения
   - В проекте уже есть существующие теги, если они подходят по смыслы, бери НЕКОТОРЫЕ, но не все - придумывать тоже надо. Существующие в проекте теги: {tags}

2. **Критерии отбора тегов:**
   - Краткость: 1-2 слова
   - Релевантность и информативность
   - Приоритет основным предметным областям
   - Учет всех упомянутых партнеров
   - Использование существующих тегов при наличии похожих вариантов

3. **Объем:** 12-18 наиболее значимых тегов

4. **Формат вывода:** Только валидный JSON-массив строк, нижний регистр. На выходе ты должен предоставлять ТОЛЬКО валидный JSON-массив строк (valid JSON array of strings). Никаких пояснений, комментариев, форматирования Markdown (вроде ```json```) до или после массива быть не должно.

**Пример вывода:**
`["искусственный интеллект", "математика", "алгоритмы", "машинное обучение", "программирование", "Сбер", "Яндекс", "1С", "BigTech", "проектная деятельность", "стартапы", "информационные системы", "вычислительные мощности", "карьерный рост"]`"""  # noqa: E501
